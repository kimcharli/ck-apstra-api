{#
Configure sflow on the activive interfaces on leaf switches.
  The spine bound interfaces are excluded.
  Every leaf should have FIS routing zone. As such, a VN of FIS needs to be on every leaf. 
  The engine-id is set to 8888. This is to use the same authentication and privacy key.
  
Example property set:
    sflow_collector: 10.3.33.33
    sflow_port: 6343
    sflow_rz: FIS
    snmp_versin: 3     ## 2 or 3
    v2_community: sFlow-collector
    v3_user: sflow-v3
    v3_auth_key: $9$NW-24ZUjfQF-VTzF6At8Xx-s2DikQ36ji.5Qz6/lKvWLNVb2ZDiVbP5zF/9X7Nd24UjH.fTNdwgaJDjtu0BhSrlM8LNhcdbw2aJik.PfztuOIRSCAORhcvM4aJUk.5T3AtOQzCuO1hcvWL7wYZUjq.5-V.P5T3nWLX7-woJGDjqLxHqf5F39ApBcy
    v3_priv_key: $9$6Hwe9uOhclMWxKvDikqQzcyrKX7Vb2aGD-dwgoaUDApuB1hKM8Vs2MW7Vs2aJ36/ApBlKM8xNKvjHkqf5n/CuRhKvL7dbp0
    
Test command example:
    snmpwalk -v3  -l authNoPriv -u sflow-v3 -a SHA-256 -A zaq12wsxcde34rfv 10.85.192.16 .1.3.6.1.2.1.2.1
    snmpwalk -v3  -l authPriv -u sflow-v3 -a SHA-256 -A zaq12wsxcde34rfv -x AES-128 -X vfr43edcxsw21qaz 10.85.192.16 .1.3.6.1.2.1

/etc/juniper/flowcoll.yml example
#EF_PROCESSOR_ENRICH_NETIF_SNMP_COMMUNITIES: sFlow-collector
EF_PROCESSOR_ENRICH_NETIF_SNMP_ENABLE: "true"
EF_PROCESSOR_ENRICH_NETIF_SNMP_RETRIES: 1
EF_PROCESSOR_ENRICH_NETIF_SNMP_TIMEOUT: 2
EF_PROCESSOR_ENRICH_NETIF_SNMP_V3_AUTHENTICATION_PASSPHRASE: "zaq12wsxcde34rfv"
EF_PROCESSOR_ENRICH_NETIF_SNMP_V3_AUTHENTICATION_PROTOCOL: "sha256"
EF_PROCESSOR_ENRICH_NETIF_SNMP_V3_PRIVACY_PASSPHRASE: "vfr43edcxsw21qaz"
EF_PROCESSOR_ENRICH_NETIF_SNMP_V3_PRIVACY_PROTOCOL: "aes128"
EF_PROCESSOR_ENRICH_NETIF_SNMP_V3_USERNAME: "sflow-v3"
EF_PROCESSOR_ENRICH_NETIF_SNMP_VERSION: 3

#}
{% if role == 'leaf' %}
routing-options {
    static {
        route {{sflow_collector}}/32 next-table {{sflow_rz}}.inet.0;
    }
}
protocols {
    sflow {
        polling-interval 10;
        sample-rate {
            ingress 1024;
            egress 1024;
        }
        source-ip {{security_zones[sflow_rz]['loopback_ip']}};
        collector {{sflow_collector}} {
            udp-port {{sflow_port}};
        }
    {% for intf_name in interface.values() 
        | rejectattr('switch_port_mode', 'equalto', 'subinterface') 
        | rejectattr('is_port_channel') 
        | selectattr('role', 'in', '["l2edge", "l3edge"]') 
        | map(attribute='intfName') 
        | list %}
        interfaces {{ intf_name }};
    {% endfor %}
    }
}
snmp {
{% if snmp_version == 3 %}
    v3 {
        usm {
            local-engine {
                user {{v3_user}} {
                    authentication-sha256 {
                        authentication-key "{{v3_auth_key}}"; ## SECRET-DATA
                    }
                    privacy-aes128 {
                        privacy-key "{{v3_priv_key}}"; ## SECRET-DATA
                    }
                }
            }
        }
        vacm {
            security-to-group {
                security-model usm {
                    security-name {{v3_user}} {
                        group sflow;
                    }
                }
            }
            access {
                group sflow {
                    default-context-prefix {
                        security-model usm {
                            security-level authentication {
                                read-view mib-2;
                            }
                        }
                    }
                }
            }
        }
    }
    engine-id {
        local 8888;
    }
{% elif snmp_version == 2 %}
    community {{v2_community}} {
        view mib-2;
        authoriztion read-only;
        routing-instance mgmt_junos {
            client-list-name sFlow-collector;
        }
    }
{% endif %}
    view mib-2 {
        oid .1.3.6.1.2.1;
    }
    client-list sFlow-collector {
        {{sflow_collector}}/32;
    }
    routing-instance-access;
}
{% endif %}
