[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"
#requires = ["poetry-core"]
#build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "ck-apstra-api"
version = "0.4.25"
description = "An implementation to use Apstra API"
authors = [ "Charlie Kim <ckim@juniper.net>" ]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "<3.13,>=3.11"
requests = "^2.31.0"
click = "^8.1.7"
result = "0.16.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4"  
pytest-sugar = "*"  
pytest-cov = "*"  
black = "*"  
mypy = "*"  
ruff = "*"  


[[tool.poetry.source]]
name = "pypi"
priority = "primary"

[tool.poetry.scripts]
ck-cli = "ck_apstra_api.cli:cli"


[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
pythonpath = "src"
addopts = [
    "--import-mode=importlib",
]

[tool.tox]
legacy_tox_ini = """
    [tox]
    envlist = py311, pep8
    skipsdist = True
    isolated_build = True

    [pytest]
    log_cli = True
    log_cli_level = DEBUG
    console_output_style = progress

    [testenv]
    usedevelop=True
    description = run the tests with pytest
    package = wheel
    wheel_build_env = .pkg
    deps =
        flake8
        -rrequirements.txt
        pytest>=6
    commands =
        pytest --capture=tee-sys {tty:--color=yes} {posargs:tests}


"""

[tool.ruff]
exclude = [
    "tests/var/*",
    "dist/*",
    "*/__pycache__/*",
    "*/.pytest_cache/*",
    "*/.tox",
    ".venv/*",
    ".github/*",
]

# Same as Black.
line-length = 88
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

extend-select = ["E501", "W291"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
